// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: tags.sql

package db

import (
	"context"

	"github.com/lib/pq"
)

const createTag = `-- name: CreateTag :one
INSERT INTO tags (name, has_synonyms, synonyms, is_moderator_only, is_required, count, status)
VALUES ($1, $2, $3, $4, $5, $6, $7)
RETURNING id, has_synonyms, synonyms, is_moderator_only, is_required, count, name, status
`

type CreateTagParams struct {
	Name            string
	HasSynonyms     bool
	Synonyms        []string
	IsModeratorOnly bool
	IsRequired      bool
	Count           int32
	Status          string
}

func (q *Queries) CreateTag(ctx context.Context, arg CreateTagParams) (Tag, error) {
	row := q.db.QueryRowContext(ctx, createTag,
		arg.Name,
		arg.HasSynonyms,
		pq.Array(arg.Synonyms),
		arg.IsModeratorOnly,
		arg.IsRequired,
		arg.Count,
		arg.Status,
	)
	var i Tag
	err := row.Scan(
		&i.ID,
		&i.HasSynonyms,
		pq.Array(&i.Synonyms),
		&i.IsModeratorOnly,
		&i.IsRequired,
		&i.Count,
		&i.Name,
		&i.Status,
	)
	return i, err
}
